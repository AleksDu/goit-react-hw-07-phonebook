{"version":3,"sources":["App.module.css","components/ContactItem/ContactItem.module.scss","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","redux/app/contact-selector.js","redux/app/contact-actions.js","redux/app/contact-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","icons/remove.svg","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","redux/app/contact-reducer.js","redux/app/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","defaultProps","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","name","includes","getFilteredContacts","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","get","contactsOperation","fetchContacts","dispatch","a","data","addContact","number","contact","post","deleteContact","id","delete","ContactForm","useSelector","useDispatch","contactNameId","shortid","generate","contactNumberId","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","alert","find","contactsOperations","label","htmlFor","type","placeholder","input","onChange","pattern","title","button__wrapper","button","Filter","_path","_path2","actions","target","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRemove","_ref","svgRef","titleId","props","width","height","viewBox","fill","xmlns","ref","d","fillRule","clipRule","ForwardRef","ContactItem","contactName","contactNumber","onClickDeleteContact","item","href","onClick","ContactList","useEffect","list","map","onDeleteContact","App","allContacts","createReducer","_","payload","loading","combineReducers","store","configureStore","reducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f2b328c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__QP8sz\",\"close\":\"App_close__1F-9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2LSJt\",\"name\":\"ContactItem_name__1shQG\",\"number\":\"ContactItem_number__BBoUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3wzGa\",\"input\":\"Filter_input__2cWrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1-eUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3T6te\",\"item\":\"ContactList_item__2aW94\",\"button\":\"ContactList_button__1Z-kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ciRD\",\"label\":\"ContactForm_label__XZQAr\",\"input\":\"ContactForm_input__2i1LB\",\"button__wrapper\":\"ContactForm_button__wrapper__1SJPa\",\"button\":\"ContactForm_button__1BN2W\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nContainer.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const getFilteredContacts = (contacts) => {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      return contacts.filter((text) =>\r\n        text.name.toLowerCase().includes(normalizedFilter)\r\n      );\r\n    };\r\n    return getFilteredContacts(contacts);\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contact/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contact/changeFilter\");\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contact-actions\";\r\n\r\naxios.get(\"https://6197697eaf46280017e7e5de.mockapi.io/api/v1/contacts\");\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://6197697eaf46280017e7e5de.mockapi.io/api/v1/contacts\"\r\n    );\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"https://6197697eaf46280017e7e5de.mockapi.io/api/v1/contacts\",\r\n      contact\r\n    );\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(\r\n      `https://6197697eaf46280017e7e5de.mockapi.io/api/v1/contacts/${id}`\r\n    );\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nconst contactsOperation = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperation;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/app/contact-selector\";\r\nimport contactsOperations from \"../../redux/app/contact-operations\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const contactNameId = shortid.generate();\r\n  const contactNumberId = shortid.generate();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\") {\r\n      alert(`Put name, please`);\r\n      return;\r\n    }\r\n\r\n    if (number === \"\") {\r\n      alert(`Put number, please`);\r\n    }\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      alert(`${name} is already in contacts!🙄`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.addContact(name, number));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={contactNameId}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Contact name\"\r\n          aria-label=\"input to you name\"\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          id={contactNameId}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={contactNumberId}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Phone number\"\r\n          aria-label=\"input to you phone number\"\r\n          className={s.input}\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          id={contactNumberId}\r\n        />\r\n      </label>\r\n      <div className={s.button__wrapper}>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/app/contact-selector\";\r\nimport * as actions from \"../../redux/app/contact-actions\";\r\n\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n  const onChange = (e) => dispatch(actions.changeFilter(e.target.value));\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Find?\"\r\n        className={s.input}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRemove(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 11C7.44772 11 7 11.4477 7 12C7 12.5523 7.44772 13 8 13H16C16.5523 13 17 12.5523 17 12C17 11.4477 16.5523 11 16 11H8Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12ZM21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRemove);\nexport default __webpack_public_path__ + \"static/media/remove.b0eea0bf.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { ReactComponent as DeleteIcon } from \"../../icons/remove.svg\";\r\n\r\nimport s from \"./ContactItem.module.scss\";\r\n\r\n// Принимает один контакт и метод для удаления контакта\r\nconst ContactItem = ({ contactName, contactNumber, onClickDeleteContact }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={s.name}>{contactName}</span>\r\n      <a href={`tel:${contactNumber}`} className={s.number}>\r\n        {contactNumber}\r\n      </a>\r\n\r\n      <button onClick={onClickDeleteContact} aria-label=\"Delete contact\">\r\n        <DeleteIcon width=\"20px\" height=\"20px\" fill=\"#a7a1a1\" />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import s from \"./ContactList.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/app/contact-operations\";\r\nimport { getVisibleContacts } from \"../../redux/app/contact-selector\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  const onDeleteContact = (id) =>\r\n    dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          contactName={name}\r\n          contactNumber={number}\r\n          onClickDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport Container from \"./components/Container\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport { getVisibleContacts } from \"./redux/app/contact-selector\";\r\nimport { useSelector } from \"react-redux\";\r\nimport s from \"./App.module.css\";\r\n\r\nfunction App() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const allContacts = contacts.length;\r\n  return (\r\n    <Container>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <p>Всего:{allContacts}</p>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: state.app.contacts,\r\n//   filter: state.app.filter,\r\n// });\r\n// const mapDispatchToProrps = (dispatch) => ({\r\n//   formSubmitHandler: (contactData) =>\r\n//     dispatch(appActions.addContact(contactData)),\r\n//   contactDelete: (contactId) => dispatch(appActions.deleteContact(contactId)),\r\n//   filterSet: (str) => dispatch(appActions.filterSet(str)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProrps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from \"./contact-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./contact-reducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/app/store.js\";\r\n\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./App.module.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <BrowserRouter> */}\r\n      <App />\r\n      {/* </BrowserRouter> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}